import { QueryList } from "@angular/core";
import { ColDef } from "ag-grid-community";
import * as ɵngcc0 from '@angular/core';
export declare class AgGridColumn {
    childColumns: QueryList<AgGridColumn>;
    hasChildColumns(): boolean;
    toColDef(): ColDef;
    private getChildColDefs;
    private createColDefFromGridColumn;
    children: any;
    sortingOrder: any;
    allowedAggFuncs: any;
    menuTabs: any;
    cellClassRules: any;
    icons: any;
    headerGroupComponent: any;
    headerGroupComponentFramework: any;
    headerGroupComponentParams: any;
    cellStyle: any;
    cellRendererParams: any;
    cellEditorFramework: any;
    cellEditorParams: any;
    pinnedRowCellRendererFramework: any;
    pinnedRowCellRendererParams: any;
    filterFramework: any;
    filterParams: any;
    headerComponent: any;
    headerComponentFramework: any;
    headerComponentParams: any;
    floatingFilterComponent: any;
    floatingFilterComponentParams: any;
    floatingFilterComponentFramework: any;
    tooltipComponent: any;
    tooltipComponentParams: any;
    tooltipComponentFramework: any;
    refData: any;
    headerName: any;
    columnGroupShow: any;
    headerClass: any;
    toolPanelClass: any;
    headerValueGetter: any;
    groupId: any;
    colId: any;
    sort: any;
    field: any;
    type: any;
    tooltipField: any;
    headerTooltip: any;
    cellClass: any;
    showRowGroup: any;
    filter: any;
    aggFunc: any;
    cellRenderer: any;
    cellEditor: any;
    pinned: any;
    chartDataType: any;
    sortedAt: any;
    flex: any;
    width: any;
    minWidth: any;
    maxWidth: any;
    rowGroupIndex: any;
    pivotIndex: any;
    dndSourceOnRowDrag: any;
    valueGetter: any;
    valueSetter: any;
    filterValueGetter: any;
    keyCreator: any;
    cellRendererFramework: any;
    pinnedRowCellRenderer: any;
    valueFormatter: any;
    pinnedRowValueFormatter: any;
    valueParser: any;
    comparator: any;
    equals: any;
    pivotComparator: any;
    suppressKeyboardEvent: any;
    colSpan: any;
    rowSpan: any;
    getQuickFilterText: any;
    newValueHandler: any;
    onCellValueChanged: any;
    onCellClicked: any;
    onCellDoubleClicked: any;
    onCellContextMenu: any;
    rowDragText: any;
    tooltip: any;
    tooltipValueGetter: any;
    cellRendererSelector: any;
    cellEditorSelector: any;
    suppressCellFlash: any;
    suppressColumnsToolPanel: any;
    suppressFiltersToolPanel: any;
    openByDefault: any;
    marryChildren: any;
    hide: any;
    rowGroup: any;
    pivot: any;
    checkboxSelection: any;
    headerCheckboxSelection: any;
    headerCheckboxSelectionFilteredOnly: any;
    suppressMenu: any;
    suppressSorting: any;
    suppressMovable: any;
    suppressFilter: any;
    lockPosition: any;
    lockVisible: any;
    lockPinned: any;
    unSortIcon: any;
    suppressSizeToFit: any;
    suppressResize: any;
    suppressAutoSize: any;
    enableRowGroup: any;
    enablePivot: any;
    enableValue: any;
    editable: any;
    suppressPaste: any;
    suppressNavigable: any;
    enableCellChangeFlash: any;
    rowDrag: any;
    dndSource: any;
    autoHeight: any;
    sortable: any;
    resizable: any;
    singleClickEdit: any;
    floatingFilter: any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AgGridColumn>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AgGridColumn, "ag-grid-column", never, {
    "children": "children";
    "sortingOrder": "sortingOrder";
    "allowedAggFuncs": "allowedAggFuncs";
    "menuTabs": "menuTabs";
    "cellClassRules": "cellClassRules";
    "icons": "icons";
    "headerGroupComponent": "headerGroupComponent";
    "headerGroupComponentFramework": "headerGroupComponentFramework";
    "headerGroupComponentParams": "headerGroupComponentParams";
    "cellStyle": "cellStyle";
    "cellRendererParams": "cellRendererParams";
    "cellEditorFramework": "cellEditorFramework";
    "cellEditorParams": "cellEditorParams";
    "pinnedRowCellRendererFramework": "pinnedRowCellRendererFramework";
    "pinnedRowCellRendererParams": "pinnedRowCellRendererParams";
    "filterFramework": "filterFramework";
    "filterParams": "filterParams";
    "headerComponent": "headerComponent";
    "headerComponentFramework": "headerComponentFramework";
    "headerComponentParams": "headerComponentParams";
    "floatingFilterComponent": "floatingFilterComponent";
    "floatingFilterComponentParams": "floatingFilterComponentParams";
    "floatingFilterComponentFramework": "floatingFilterComponentFramework";
    "tooltipComponent": "tooltipComponent";
    "tooltipComponentParams": "tooltipComponentParams";
    "tooltipComponentFramework": "tooltipComponentFramework";
    "refData": "refData";
    "headerName": "headerName";
    "columnGroupShow": "columnGroupShow";
    "headerClass": "headerClass";
    "toolPanelClass": "toolPanelClass";
    "headerValueGetter": "headerValueGetter";
    "groupId": "groupId";
    "colId": "colId";
    "sort": "sort";
    "field": "field";
    "type": "type";
    "tooltipField": "tooltipField";
    "headerTooltip": "headerTooltip";
    "cellClass": "cellClass";
    "showRowGroup": "showRowGroup";
    "filter": "filter";
    "aggFunc": "aggFunc";
    "cellRenderer": "cellRenderer";
    "cellEditor": "cellEditor";
    "pinned": "pinned";
    "chartDataType": "chartDataType";
    "sortedAt": "sortedAt";
    "flex": "flex";
    "width": "width";
    "minWidth": "minWidth";
    "maxWidth": "maxWidth";
    "rowGroupIndex": "rowGroupIndex";
    "pivotIndex": "pivotIndex";
    "dndSourceOnRowDrag": "dndSourceOnRowDrag";
    "valueGetter": "valueGetter";
    "valueSetter": "valueSetter";
    "filterValueGetter": "filterValueGetter";
    "keyCreator": "keyCreator";
    "cellRendererFramework": "cellRendererFramework";
    "pinnedRowCellRenderer": "pinnedRowCellRenderer";
    "valueFormatter": "valueFormatter";
    "pinnedRowValueFormatter": "pinnedRowValueFormatter";
    "valueParser": "valueParser";
    "comparator": "comparator";
    "equals": "equals";
    "pivotComparator": "pivotComparator";
    "suppressKeyboardEvent": "suppressKeyboardEvent";
    "colSpan": "colSpan";
    "rowSpan": "rowSpan";
    "getQuickFilterText": "getQuickFilterText";
    "newValueHandler": "newValueHandler";
    "onCellValueChanged": "onCellValueChanged";
    "onCellClicked": "onCellClicked";
    "onCellDoubleClicked": "onCellDoubleClicked";
    "onCellContextMenu": "onCellContextMenu";
    "rowDragText": "rowDragText";
    "tooltip": "tooltip";
    "tooltipValueGetter": "tooltipValueGetter";
    "cellRendererSelector": "cellRendererSelector";
    "cellEditorSelector": "cellEditorSelector";
    "suppressCellFlash": "suppressCellFlash";
    "suppressColumnsToolPanel": "suppressColumnsToolPanel";
    "suppressFiltersToolPanel": "suppressFiltersToolPanel";
    "openByDefault": "openByDefault";
    "marryChildren": "marryChildren";
    "hide": "hide";
    "rowGroup": "rowGroup";
    "pivot": "pivot";
    "checkboxSelection": "checkboxSelection";
    "headerCheckboxSelection": "headerCheckboxSelection";
    "headerCheckboxSelectionFilteredOnly": "headerCheckboxSelectionFilteredOnly";
    "suppressMenu": "suppressMenu";
    "suppressSorting": "suppressSorting";
    "suppressMovable": "suppressMovable";
    "suppressFilter": "suppressFilter";
    "lockPosition": "lockPosition";
    "lockVisible": "lockVisible";
    "lockPinned": "lockPinned";
    "unSortIcon": "unSortIcon";
    "suppressSizeToFit": "suppressSizeToFit";
    "suppressResize": "suppressResize";
    "suppressAutoSize": "suppressAutoSize";
    "enableRowGroup": "enableRowGroup";
    "enablePivot": "enablePivot";
    "enableValue": "enableValue";
    "editable": "editable";
    "suppressPaste": "suppressPaste";
    "suppressNavigable": "suppressNavigable";
    "enableCellChangeFlash": "enableCellChangeFlash";
    "rowDrag": "rowDrag";
    "dndSource": "dndSource";
    "autoHeight": "autoHeight";
    "sortable": "sortable";
    "resizable": "resizable";
    "singleClickEdit": "singleClickEdit";
    "floatingFilter": "floatingFilter";
}, {}, ["childColumns"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWctZ3JpZC1jb2x1bW4uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFnLWdyaWQtY29sdW1uLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkhBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUXVlcnlMaXN0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENvbERlZiB9IGZyb20gXCJhZy1ncmlkLWNvbW11bml0eVwiO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQWdHcmlkQ29sdW1uIHtcbiAgICBjaGlsZENvbHVtbnM6IFF1ZXJ5TGlzdDxBZ0dyaWRDb2x1bW4+O1xuICAgIGhhc0NoaWxkQ29sdW1ucygpOiBib29sZWFuO1xuICAgIHRvQ29sRGVmKCk6IENvbERlZjtcbiAgICBwcml2YXRlIGdldENoaWxkQ29sRGVmcztcbiAgICBwcml2YXRlIGNyZWF0ZUNvbERlZkZyb21HcmlkQ29sdW1uO1xuICAgIGNoaWxkcmVuOiBhbnk7XG4gICAgc29ydGluZ09yZGVyOiBhbnk7XG4gICAgYWxsb3dlZEFnZ0Z1bmNzOiBhbnk7XG4gICAgbWVudVRhYnM6IGFueTtcbiAgICBjZWxsQ2xhc3NSdWxlczogYW55O1xuICAgIGljb25zOiBhbnk7XG4gICAgaGVhZGVyR3JvdXBDb21wb25lbnQ6IGFueTtcbiAgICBoZWFkZXJHcm91cENvbXBvbmVudEZyYW1ld29yazogYW55O1xuICAgIGhlYWRlckdyb3VwQ29tcG9uZW50UGFyYW1zOiBhbnk7XG4gICAgY2VsbFN0eWxlOiBhbnk7XG4gICAgY2VsbFJlbmRlcmVyUGFyYW1zOiBhbnk7XG4gICAgY2VsbEVkaXRvckZyYW1ld29yazogYW55O1xuICAgIGNlbGxFZGl0b3JQYXJhbXM6IGFueTtcbiAgICBwaW5uZWRSb3dDZWxsUmVuZGVyZXJGcmFtZXdvcms6IGFueTtcbiAgICBwaW5uZWRSb3dDZWxsUmVuZGVyZXJQYXJhbXM6IGFueTtcbiAgICBmaWx0ZXJGcmFtZXdvcms6IGFueTtcbiAgICBmaWx0ZXJQYXJhbXM6IGFueTtcbiAgICBoZWFkZXJDb21wb25lbnQ6IGFueTtcbiAgICBoZWFkZXJDb21wb25lbnRGcmFtZXdvcms6IGFueTtcbiAgICBoZWFkZXJDb21wb25lbnRQYXJhbXM6IGFueTtcbiAgICBmbG9hdGluZ0ZpbHRlckNvbXBvbmVudDogYW55O1xuICAgIGZsb2F0aW5nRmlsdGVyQ29tcG9uZW50UGFyYW1zOiBhbnk7XG4gICAgZmxvYXRpbmdGaWx0ZXJDb21wb25lbnRGcmFtZXdvcms6IGFueTtcbiAgICB0b29sdGlwQ29tcG9uZW50OiBhbnk7XG4gICAgdG9vbHRpcENvbXBvbmVudFBhcmFtczogYW55O1xuICAgIHRvb2x0aXBDb21wb25lbnRGcmFtZXdvcms6IGFueTtcbiAgICByZWZEYXRhOiBhbnk7XG4gICAgaGVhZGVyTmFtZTogYW55O1xuICAgIGNvbHVtbkdyb3VwU2hvdzogYW55O1xuICAgIGhlYWRlckNsYXNzOiBhbnk7XG4gICAgdG9vbFBhbmVsQ2xhc3M6IGFueTtcbiAgICBoZWFkZXJWYWx1ZUdldHRlcjogYW55O1xuICAgIGdyb3VwSWQ6IGFueTtcbiAgICBjb2xJZDogYW55O1xuICAgIHNvcnQ6IGFueTtcbiAgICBmaWVsZDogYW55O1xuICAgIHR5cGU6IGFueTtcbiAgICB0b29sdGlwRmllbGQ6IGFueTtcbiAgICBoZWFkZXJUb29sdGlwOiBhbnk7XG4gICAgY2VsbENsYXNzOiBhbnk7XG4gICAgc2hvd1Jvd0dyb3VwOiBhbnk7XG4gICAgZmlsdGVyOiBhbnk7XG4gICAgYWdnRnVuYzogYW55O1xuICAgIGNlbGxSZW5kZXJlcjogYW55O1xuICAgIGNlbGxFZGl0b3I6IGFueTtcbiAgICBwaW5uZWQ6IGFueTtcbiAgICBjaGFydERhdGFUeXBlOiBhbnk7XG4gICAgc29ydGVkQXQ6IGFueTtcbiAgICBmbGV4OiBhbnk7XG4gICAgd2lkdGg6IGFueTtcbiAgICBtaW5XaWR0aDogYW55O1xuICAgIG1heFdpZHRoOiBhbnk7XG4gICAgcm93R3JvdXBJbmRleDogYW55O1xuICAgIHBpdm90SW5kZXg6IGFueTtcbiAgICBkbmRTb3VyY2VPblJvd0RyYWc6IGFueTtcbiAgICB2YWx1ZUdldHRlcjogYW55O1xuICAgIHZhbHVlU2V0dGVyOiBhbnk7XG4gICAgZmlsdGVyVmFsdWVHZXR0ZXI6IGFueTtcbiAgICBrZXlDcmVhdG9yOiBhbnk7XG4gICAgY2VsbFJlbmRlcmVyRnJhbWV3b3JrOiBhbnk7XG4gICAgcGlubmVkUm93Q2VsbFJlbmRlcmVyOiBhbnk7XG4gICAgdmFsdWVGb3JtYXR0ZXI6IGFueTtcbiAgICBwaW5uZWRSb3dWYWx1ZUZvcm1hdHRlcjogYW55O1xuICAgIHZhbHVlUGFyc2VyOiBhbnk7XG4gICAgY29tcGFyYXRvcjogYW55O1xuICAgIGVxdWFsczogYW55O1xuICAgIHBpdm90Q29tcGFyYXRvcjogYW55O1xuICAgIHN1cHByZXNzS2V5Ym9hcmRFdmVudDogYW55O1xuICAgIGNvbFNwYW46IGFueTtcbiAgICByb3dTcGFuOiBhbnk7XG4gICAgZ2V0UXVpY2tGaWx0ZXJUZXh0OiBhbnk7XG4gICAgbmV3VmFsdWVIYW5kbGVyOiBhbnk7XG4gICAgb25DZWxsVmFsdWVDaGFuZ2VkOiBhbnk7XG4gICAgb25DZWxsQ2xpY2tlZDogYW55O1xuICAgIG9uQ2VsbERvdWJsZUNsaWNrZWQ6IGFueTtcbiAgICBvbkNlbGxDb250ZXh0TWVudTogYW55O1xuICAgIHJvd0RyYWdUZXh0OiBhbnk7XG4gICAgdG9vbHRpcDogYW55O1xuICAgIHRvb2x0aXBWYWx1ZUdldHRlcjogYW55O1xuICAgIGNlbGxSZW5kZXJlclNlbGVjdG9yOiBhbnk7XG4gICAgY2VsbEVkaXRvclNlbGVjdG9yOiBhbnk7XG4gICAgc3VwcHJlc3NDZWxsRmxhc2g6IGFueTtcbiAgICBzdXBwcmVzc0NvbHVtbnNUb29sUGFuZWw6IGFueTtcbiAgICBzdXBwcmVzc0ZpbHRlcnNUb29sUGFuZWw6IGFueTtcbiAgICBvcGVuQnlEZWZhdWx0OiBhbnk7XG4gICAgbWFycnlDaGlsZHJlbjogYW55O1xuICAgIGhpZGU6IGFueTtcbiAgICByb3dHcm91cDogYW55O1xuICAgIHBpdm90OiBhbnk7XG4gICAgY2hlY2tib3hTZWxlY3Rpb246IGFueTtcbiAgICBoZWFkZXJDaGVja2JveFNlbGVjdGlvbjogYW55O1xuICAgIGhlYWRlckNoZWNrYm94U2VsZWN0aW9uRmlsdGVyZWRPbmx5OiBhbnk7XG4gICAgc3VwcHJlc3NNZW51OiBhbnk7XG4gICAgc3VwcHJlc3NTb3J0aW5nOiBhbnk7XG4gICAgc3VwcHJlc3NNb3ZhYmxlOiBhbnk7XG4gICAgc3VwcHJlc3NGaWx0ZXI6IGFueTtcbiAgICBsb2NrUG9zaXRpb246IGFueTtcbiAgICBsb2NrVmlzaWJsZTogYW55O1xuICAgIGxvY2tQaW5uZWQ6IGFueTtcbiAgICB1blNvcnRJY29uOiBhbnk7XG4gICAgc3VwcHJlc3NTaXplVG9GaXQ6IGFueTtcbiAgICBzdXBwcmVzc1Jlc2l6ZTogYW55O1xuICAgIHN1cHByZXNzQXV0b1NpemU6IGFueTtcbiAgICBlbmFibGVSb3dHcm91cDogYW55O1xuICAgIGVuYWJsZVBpdm90OiBhbnk7XG4gICAgZW5hYmxlVmFsdWU6IGFueTtcbiAgICBlZGl0YWJsZTogYW55O1xuICAgIHN1cHByZXNzUGFzdGU6IGFueTtcbiAgICBzdXBwcmVzc05hdmlnYWJsZTogYW55O1xuICAgIGVuYWJsZUNlbGxDaGFuZ2VGbGFzaDogYW55O1xuICAgIHJvd0RyYWc6IGFueTtcbiAgICBkbmRTb3VyY2U6IGFueTtcbiAgICBhdXRvSGVpZ2h0OiBhbnk7XG4gICAgc29ydGFibGU6IGFueTtcbiAgICByZXNpemFibGU6IGFueTtcbiAgICBzaW5nbGVDbGlja0VkaXQ6IGFueTtcbiAgICBmbG9hdGluZ0ZpbHRlcjogYW55O1xufVxuIl19